image: golang:1.18-buster

stages:
  - test
  - broker
  - artifact

.gobuild:
  stage: test
  before_script:
    - go version
  script:
    - make
    - make cover
  only:
    refs:
      - master
      - dev

go1.13:
  image: golang:1.13-buster
  extends: .gobuild

go1.14:
  image: golang:1.14-buster
  extends: .gobuild

go1.15:
  image: golang:1.15-buster
  extends: .gobuild

go1.16:
  image: golang:1.16-buster
  extends: .gobuild

go1.17:
  image: golang:1.17-buster
  extends: .gobuild

go1.18:
  image: golang:1.18-buster
  extends: .gobuild

.test-integration:
  script:
    - apt-get update -y && apt-get install -y mosquitto-clients
    - make test-integration
    - make test-detach
    - ./test.network
  needs:
    - job: go1.13
    - job: go1.14
    - job: go1.15
    - job: go1.16
    - job: go1.17
    - job: go1.18
  only:
    refs:
      - master
      - dev

# Must Mosquitto >= 1.6
# https://github.com/eclipse/mosquitto/blob/master/ChangeLog.txt#L616
test mosquitto 1.6:
  stage: broker
  services:
    - name: eclipse-mosquitto:1.6
  variables:
    MQTT: "eclipse-mosquitto:1883"
  extends: .test-integration

test emqx latest:
  stage: broker
  services:
    - name: emqx/emqx:latest
      alias: emqx
  variables:
    MQTT: "emqx:1883"
  extends: .test-integration

test emqx 4.4.1:
  stage: broker
  services:
    - name: emqx/emqx:4.4.1
      alias: emqx
  variables:
    MQTT: "emqx:1883"
  extends: .test-integration

test emqx deb:
  stage: broker
  before_script:
    - apt-get update -y && apt-get install -y mosquitto-clients
    - wget https://github.com/emqx/emqx/releases/download/v4.2.3/emqx-debian10-4.2.3-x86_64.deb
    - dpkg -i emqx-debian10-4.2.3-x86_64.deb
    - service emqx start
  extends: .test-integration

build binary:
  stage: artifact
  script:
    - make
  artifacts:
    paths:
      - ncp
    expire_in: 1 week

build image branch:
  image: docker:20.10.5
  stage: artifact
  services:
    - docker:20.10.5-dind
  before_script:
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_NAME}:latest
  script:
    - docker build --tag ${CONTAINER_IMAGE} .
    - docker push ${CONTAINER_IMAGE}

